name: Deploy and Daily Ingest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6:00 AM UTC (3:00 AM BRT)
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual trigger

env:
  NODE_VERSION: '20'

jobs:
  # 1. Check environment variables
  check-env:
    runs-on: ubuntu-latest
    steps:
      - name: Check required environment variables
        run: |
          echo "Checking environment variables..."
          if [ -z "${{ secrets.SUPABASE_URL }}" ]; then
            echo "‚ùå SUPABASE_URL is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SUPABASE_SERVICE_ROLE }}" ]; then
            echo "‚ùå SUPABASE_SERVICE_ROLE is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "‚ùå VERCEL_TOKEN is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "‚ùå VERCEL_PROJECT_ID is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "‚ùå VERCEL_ORG_ID is not set"
            exit 1
          fi
          echo "‚úÖ All required environment variables are set"

  # 2. Deploy to Vercel
  deploy:
    runs-on: ubuntu-latest
    needs: check-env
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # 3. Daily blog ingestion (only on schedule or manual)
  ingest:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run blog ingestion
        run: npm run ingest
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      - name: Send success notification
        if: success()
        run: |
          if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d "text=‚úÖ Blog ingestion completed successfully! üöÄ" \
              -d "parse_mode=HTML"
          fi

      - name: Send failure notification
        if: failure()
        run: |
          if [ -n "${{ secrets.TELEGRAM_BOT_TOKEN }}" ] && [ -n "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d "text=‚ùå Blog ingestion failed! Please check the logs. üîç" \
              -d "parse_mode=HTML"
          fi 