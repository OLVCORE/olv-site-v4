name: Deploy and Daily Ingest

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 6:00 AM UTC (3:00 AM BRT)
    - cron: '0 6 * * *'
  workflow_dispatch:
    # Allow manual trigger

env:
  NODE_VERSION: '18'

jobs:
  # Check environment variables
  check-env:
    runs-on: ubuntu-latest
    steps:
      - name: Check required environment variables
        run: |
          echo "Checking environment variables..."
          if [ -z "${{ secrets.SUPABASE_URL }}" ]; then
            echo "‚ùå SUPABASE_URL is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SUPABASE_SERVICE_ROLE }}" ]; then
            echo "‚ùå SUPABASE_SERVICE_ROLE is not set"
            exit 1
          fi
          if [ -z "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "‚ùå OPENAI_API_KEY is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "‚ùå VERCEL_TOKEN is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "‚ùå VERCEL_ORG_ID is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "‚ùå VERCEL_PROJECT_ID is not set"
            exit 1
          fi
          echo "‚úÖ All required environment variables are set"

  # Deploy to Vercel
  deploy:
    needs: check-env
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SITE_URL: ${{ secrets.SITE_URL }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  # Daily blog ingestion
  ingest:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run blog ingestion
        run: npx tsx scripts/dailyBlogIngest.ts
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          SITE_URL: ${{ secrets.SITE_URL }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}

      - name: Send success notification
        if: success()
        run: |
          echo "‚úÖ Deploy and ingestion completed successfully"
          # You can add more notification logic here if needed

  # Failure notifications
  notify-failure:
    needs: [deploy, ingest]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Send Telegram notification
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d "text=‚ùå Deploy/Ingest failed for olv-site-v4%0A%0AWorkflow: ${{ github.workflow }}%0ARepo: ${{ github.repository }}%0ABranch: ${{ github.ref }}%0ARun: ${{ github.run_id }}%0A%0AView logs: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
            -d "parse_mode=HTML"

      - name: Send email notification
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d "text=üìß Email notification sent for failed deploy/ingest" \
            -d "parse_mode=HTML" 